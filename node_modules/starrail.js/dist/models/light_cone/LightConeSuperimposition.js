"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const config_file_js_1 = require("config_file.js");
const AssetsNotFoundError_1 = __importDefault(require("../../errors/AssetsNotFoundError"));
const TextAssets_1 = __importDefault(require("../assets/TextAssets"));
/**
 * @en LightConeSuperimposition
 */
class LightConeSuperimposition {
    /**
     * @param id
     * @param client
     */
    constructor(id, level, client) {
        var _a;
        this.id = id;
        this.level = level;
        this.client = client;
        const _data = (_a = client.cachedAssetsManager.getStarRailCacheData("EquipmentSkillConfig")[this.id]) === null || _a === void 0 ? void 0 : _a[this.level];
        if (!_data)
            throw new AssetsNotFoundError_1.default("LightConeSuperimposition", this.id);
        this._data = _data;
        const json = new config_file_js_1.JsonReader(this._data);
        this.name = new TextAssets_1.default(json.getAsNumber("SkillName", "Hash"), this.client);
        // TODO: replace placeholders with numbers from paramList
        this.description = new TextAssets_1.default(json.getAsNumber("SkillDesc", "Hash"), this.client);
        this.paramList = json.get("ParamList").mapArray((_, v) => v.getAsNumber("Value"));
    }
}
exports.default = LightConeSuperimposition;
