"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const config_file_js_1 = require("config_file.js");
const AssetsNotFoundError_1 = __importDefault(require("../errors/AssetsNotFoundError"));
const ImageAssets_1 = __importDefault(require("./assets/ImageAssets"));
const TextAssets_1 = __importDefault(require("./assets/TextAssets"));
/**
 * @en StatProperty
 */
class StatProperty {
    /**
     * @param statPropertyType
     * @param client
     */
    constructor(statPropertyType, client) {
        this.statPropertyType = statPropertyType;
        this.client = client;
        const _data = client.cachedAssetsManager.getStarRailCacheData("AvatarPropertyConfig")[this.statPropertyType];
        if (!_data)
            throw new AssetsNotFoundError_1.default("StatProperty", this.statPropertyType);
        this._data = _data;
        const json = new config_file_js_1.JsonReader(this._data);
        this.name = new TextAssets_1.default(json.getAsNumber("PropertyName", "Hash"), this.client);
        this.nameSkillTree = new TextAssets_1.default(json.getAsNumber("PropertyNameSkillTree", "Hash"), this.client);
        this.nameRelic = new TextAssets_1.default(json.getAsNumber("PropertyNameRelic", "Hash"), this.client);
        this.nameFilter = new TextAssets_1.default(json.getAsNumber("PropertyNameFilter", "Hash"), this.client);
        this.isDisplay = json.getAsBooleanWithDefault(false, "IsDisplay");
        this.isBattleDisplay = json.getAsBooleanWithDefault(false, "isBattleDisplay");
        this.order = json.getAsNumber("Order");
        this.icon = new ImageAssets_1.default(json.getAsString("IconPath"), this.client);
    }
}
exports.default = StatProperty;
